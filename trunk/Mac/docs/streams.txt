另参考propertylist工程Streams类

NSStream is built on the CFStream layer of Core Foundation.

file-based streams are non-seekable; once stream data has been provided or consumed, it cannot be retrieved again from the stream.

Cocoa includes three stream-related classes: NSStream, NSInputStream, and NSOutputStream. NSInputStream and NSOutputStream are subclasses of NSStream.

You can create NSOutputStream instances for stream data located in memory or written to a file or C buffer; you can create NSInputStream instances for stream data read from an NSData object or a file. You can also have NSInputStream and NSOutputStream objects at the end points of a socket-based network connection and you can use stream objects without loading all of the stream data into memory at once. 

NSStream and its subclasses are intended for lower-level programming tasks. If there is a higher-level Cocoa API that is more suited for a particular task (for example, NSURL or NSFileHandle) use it instead.

 Two important additional properties are NSStreamDataWrittenToMemoryStreamKey, which permits retrieval of data written to memory for an output stream, and NSStreamFileCurrentOffsetKey, which allows you to manipulate the current read or write position in file-based streams.
 
  A stream object invokes the sole delegation method stream:handleEvent: for each stream-related event it handles.


读取：
In Cocoa, reading from an NSInputStream instance consists of several steps:

1 Create and initialize an instance of NSInputStream from a source of data. The source of data can be a file, an NSData object, or a network socket.
2 Schedule the stream object on a run loop and open the stream.（两种方式处理阻塞或事件run-loop和polling）
3 Handle the events that the stream object reports to its delegate.
4 When there is no more data to read, dispose of the stream object.

输出：
Using an NSOutputStream instance to write to an output stream requires several steps:

1 Create an instance of NSOutputStream and initialize it with a repository for the written data. Also set a delegate.
2 Schedule the stream object on a run loop and open the stream.
3 Handle the events that the stream object reports to its delegate.
4 If the stream object has written data to memory, obtain the data by requesting the NSStreamDataWrittenToMemoryStreamKey property.
5 When there is no more data to write, dispose of the stream object.


销毁stream对象（NSStreamEventEndEncountered事件）
first close the stream object, remove it from the run loop, and finally release it

错误处理：
The NSStream and NSOutputStream classes inform you if an error occurred in several ways:

If the stream object is scheduled on a run loop, the object reports a NSStreamEventErrorOccurred event to its delegate in a stream:handleEvent: message.
At any time, the client can send streamStatus to a stream object and see if it returns NSStreamStatusError.
If you attempt to write to an NSOutputStream object by sending it write:maxLength: and it returns -1, a write error has occurred.

///////////////////////////////socket streams//////////////////////////

